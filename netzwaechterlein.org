#    -*- mode: org -*-
#+TITLE: Netzwächterlein
#+AUTHOR: Andreas Wurzer
#+EMAIL: andreas.wurzer@novum-ccservices.at
#+OPTIONS: toc:nil num:nil
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
#+OPTIONS: reveal_center:nil
#+OPTIONS: reveal_keyboard:t reveal_overview:t
#+REVEAL_TRANS: linear
#+REVEAL_THEME: solarized
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="Title">
* Wer?
  - Andreas Wurzer
  - Java Entwickler bei der Novum am Tag
  - "Alles außer Java" Entwickler in der Nacht
* Was?
  [[file:images/server_not_found.png]]
  - Überwachung Internetverfügbarkeit
* Warum?
  - Erleichterung der Fehlersuche durch Automatisierung
  - Statistiken über Verfügbarkeit
  - Aktive Information an Benutzer
  - Erlernen neuer Techniken
* Wie?
** Mögliche Ursachen
   - Server im Internet antwortet nicht
   - Namensauflösung (DNS) funktioniert nicht
** Idee
   - Periodische Abfragen auf
     - Erreichbarkeit eines Server (ping)
     - Funktionieren der Namensauflösung (nslookup)
   - Ergebnisse
     - Speichern
     - Veröffentlichen
     - Aktiv informieren
** Realisierung
   #+BEGIN_SRC ditaa :file images/netzwaechterlein.png
     Sensoren                                 Empfänger

 /------\
 |      |                                    +---------+
 |      v            Ergebniskanal      +--->| Browser |
 |    :ping -+                          |    |         |
 |           |    +-----------------+   |    +---------+
 |           +--->+ :ping :dns ...  +---+
 |           |    +-----------------+   |    +---------+
 |    :dns --+                          |    |{s}      |
 |           |                          +--->|   DB    |
 |     ... --+                          |    +---------+
 |      |                               |
 \------/                               +---> ...
Periodische
  Abfrage
   #+END_SRC
** Ergebnisse
   - Erfolg
   #+BEGIN_SRC clojure
{:type :dns :status :ok :timestamp 1445021224910}
   #+END_SRC
   - Fehler
   #+BEGIN_SRC clojure
{:type :ping :status :error :message "Timeout" :timestamp 1445021225127}
   #+END_SRC
* Technik
  - Hardware: Plattformunabhängig, Raspberry Pi möglich
  - Plattform: Node.js
  - Sprache: ClojureScript
** Himbeer Kuchen?
   [[file:images/rpi-small.png]]
   - Computer in Kreditkartengröße ab 25€
   - Niedriger Stromverbrauch
   - https://www.raspberrypi.org
** Node.js
   - Serverseitiges JavaScript
   - Läuft am Raspberry Pi
   https://nodejs.org
   #+BEGIN_NOTES
Weniger ressourcenintensiv als Java
   #+END_NOTES
** ClojureScript
   [[file:images/cljs-small.png]]
   - LISP Dialekt
   - wird nach JavaScript übersetzt
   https://github.com/clojure/clojurescript
   #+BEGIN_NOTES
Parentheses
Code is Data
Macros
   #+END_NOTES
   #+BEGIN_NOTES
nicht der einzige Vertreter
unter anderem CoffeeScript, TypeScript, Scala
   #+END_NOTES
* Live Demo
* Fragen?!
* Danke für die Aufmerksamkeit
  https://github.com/andeee/netzwaechterlein
